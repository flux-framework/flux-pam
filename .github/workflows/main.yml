on: [ pull_request, push ]
name: ci
jobs:
  check-pr:
    name: validate commits
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - run: git fetch origin main
    - uses: flux-framework/pr-validator@master

  ci-checks:
    runs-on: ubuntu-latest
    env:
      TAP_DRIVER_QUIET: 1
      FLUX_TEST_TIMEOUT: 300
    timeout-minutes: 20
    strategy:
      matrix:
        include:
        - name: "focal"
          image: "focal"
          create_release: true
          env:
            DISTCHECK: t
        - name: "el8"
          image: "el8"
          env:
            chain_lint: t
        - name: "fedora38"
          image: "fedora38"
          env: {}
      fail-fast: false
    name: ${{ matrix.name }}
    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
       ref: ${{ github.event.pull_request.head.sha }}
       fetch-depth: 0

    - name: fetch annotated tag
      if: matrix.create_release && startswith(github.ref, 'refs/tags')
      run: |
        # Ensure git-describe works on a tag.
        #  (checkout@v3 action may have left current tag as
        #   lightweight instead of annotated. See
        #   https://github.com/actions/checkout/issues/290)
        #
        echo github.ref == ${{ github.ref }} ;
        git fetch -f origin ${{ github.ref }}:${{ github.ref }} ;
        echo git describe now reports $(git describe --always)

    - name: get tag name
      id: tag
      run: echo "TAG=${GITHUB_REF/refs\/tags\//}" >$GITHUB_OUTPUT

    - name: docker-run-checks
      env: ${{ matrix.env }}
      run: >
        ./src/test/docker/docker-run-checks.sh
        -j $(nproc)
        -i ${{ matrix.image }}
        --

    - name: annotate errors
      if: failure() || cancelled()
      run: src/test/checks-annotate.sh

    - name: create release
      id: create_release
      if: |
        success()
         && matrix.create_release
         && startswith(github.ref, 'refs/tags')
         && github.repository == 'flux-framework/flux-pam'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.output.TAG }}
        name: flux-pam ${{ steps.tag.output.TAG }}
        prerelease: true
        files: flux-pam*.tar.gz
        body: |
          View [Release Notes](https://github.com/${{ github.repository }}/blob/${{ matrix.tag }}/NEWS.md) for flux-pam ${{ steps.tag.output.TAG }}
